SELECT commsrequest.COMMSREQUESTID AS COMMSREQUESTID, 
commsrequest.PRIORITY AS PRIORITY, 
CASE WHEN commsrequest.EVENTNUMBER IS NOT NULL THEN commsrequest.REFERENCENUMBER END AS EVENTNUMBER, 
CASE WHEN commsrequest.TRIGGERNOTIFICATIONID IS NOT NULL THEN commsrequest.REFERENCENUMBER END AS TRIGGERNOTIFICATIONID, 
commsrequest.COMMSCODE AS COMMSCODE, 
commsrequest.COMMSSTRATEGYHEADERCODE AS COMMSSTRATEGYHEADERCODE, 
commsrequest.REQUESTSTATUS AS REQUESTSTATUS, 
commsrequest.CUSTOMERLEVEL AS CUSTOMERLEVEL, 
commsrequest.CUSTOMERREFERENCE AS CUSTOMERREFERENCE, 
commscode.COMMSPREFERENCECODE AS COMMSPREFERENCECODE, 
CASE WHEN commsrequest.CUSTOMERLEVEL = 'S' THEN subscription.DELIVERYADDRESSNUMBER 
	WHEN commsrequest.CUSTOMERLEVEL = 'A' THEN CASE WHEN commsrequest.ISUSECCADDRESS = '1' AND account.CCDELIVERYADDRESSNUMBER <> 0 THEN account.CCDELIVERYADDRESSNUMBER ELSE account.DELIVERYADDRESSNUMBER END
	WHEN commsrequest.CUSTOMERLEVEL = 'C' THEN (SELECT e.DELIVERYADDRESSNUMBER FROM CORPORATEHEADER e WHERE e.CORPORATECODE = commsrequest.CUSTOMERREFERENCE) 
	WHEN commsrequest.CUSTOMERLEVEL = 'G' THEN (SELECT f.DELIVERYADDRESSNUMBER FROM GROUP f WHERE f.GROUPCODE = commsrequest.CUSTOMERREFERENCE) 
	WHEN commsrequest.CUSTOMERLEVEL = 'M' THEN agreement.DELIVERYADDRESSNUMBER 
END AS DELIVERYADDRESSNUMBER, 
custemailaddress.LOWERCASEEMAILADDRESS AS EMAILADDRESS, 
customprofile.PREFERREDCOMMSDELIVERYMETHODCODE AS PREFERREDCOMMSDELIVERYMETHODCODE, 
customprofile.LANGUAGEDTG AS LANGUAGEDTG, 
customprofile.LANGUAGEDTC AS LANGUAGEDTC, 
CASE WHEN commsrequest.CUSTOMERLEVEL = 'M' THEN CONCAT(agreement.CUSTOMERLOGLEVEL, CONCAT('|', agreement.CUSTOMERLOGREFERENCE)) END AS LOGINLEVELANDCUSTOMERREFERENCE, 
agreement.CUSTOMERLOGLEVEL AS AGREEMENTLOGCUSTOMERLEVEL, 
agreement.CUSTOMERLOGREFERENCE AS AGREEMENTLOGCUSTOMERREFERENCE, 
subscription.ACCOUNTNUMBER AS SUBACCOUNTNUMBER, 
subscription.NETWORKSERIALNUMBER AS NETWORKSERIALNUMBER, 
COALESCE(custcommsprfacag.ISOPTEDIN, custcommsprf.ISOPTEDIN, commspref.ISDEFAULTOPTEDIN) AS ISOPTEDIN, 
CASE WHEN commspref.ISALLOWTIMEEXCLUSION = 1 THEN customprofile.TIMEEXCLUSIONSTART END AS TIMEEXCLUSIONSTARTTIME, 
CASE WHEN commspref.ISALLOWTIMEEXCLUSION = 1 THEN customprofile.TIMEEXCLUSIONEND END AS TIMEEXCLUSIONENDTIME, 
CASE WHEN commsrequest.CUSTOMERLEVEL = 'S' THEN commscode.ISSUBSCRIPTIONLEVEL WHEN commsrequest.CUSTOMERLEVEL = 'A' THEN commscode.ISACCOUNTLEVEL WHEN commsrequest.CUSTOMERLEVEL = 'C' THEN commscode.ISCORPORATELEVEL WHEN commsrequest.CUSTOMERLEVEL = 'G' THEN commscode.ISGROUPLEVEL WHEN commsrequest.CUSTOMERLEVEL = 'M' THEN commscode.ISAGREEMENTLEVEL ELSE 0 END AS ISCOMMCODEVALIDONCUSTLEVEL,
network.INTERNATIONALPREFIX AS INTERNATIONALPREFIX
FROM (SELECT commsreqheader.*, 
 diaryevent.EVENTNUMBER AS REFERENCENUMBER, 
 diaryevent.CUSTOMERLEVEL AS CUSTOMERLEVEL, 
 diaryevent.CUSTOMERREFERENCE AS CUSTOMERREFERENCE,
 CASE WHEN deventcode.ISUSECCADDRESS IS NULL OR deventcode.ISUSECCADDRESS = '' OR deventcode.ISUSECCADDRESS = '0' THEN '0' ELSE '1' END AS ISUSECCADDRESS
 FROM COMMSREQUESTHEADER commsreqheader 
 INNER JOIN DIARYEVENT diaryevent ON diaryevent.EVENTNUMBER = commsreqheader.EVENTNUMBER
 INNER JOIN DIARYEVENTCODE deventcode ON deventcode.EVENTTYPE = diaryevent.EVENTTYPE AND deventcode.EVENTCODE = diaryevent.EVENTTYPE
 WHERE commsreqheader.REQUESTSTATUS = 'A' 
 UNION ALL 
 SELECT commsreqheader.*, 
 tgrnotification.TRIGGERNOTIFICATIONID AS REFERENCENUMBER, 
 tgrnotification.CUSTOMERLEVEL AS CUSTOMERLEVEL, 
 tgrnotification.CUSTOMERREFERENCE AS CUSTOMERREFERENCE,
 '0' AS ISUSECCADDRESS
 FROM COMMSREQUESTHEADER commsreqheader 
 INNER JOIN TRIGGERNOTIFICATION tgrnotification ON tgrnotification.TRIGGERNOTIFICATIONID = commsreqheader.TRIGGERNOTIFICATIONID
 WHERE commsreqheader.REQUESTSTATUS = 'A' AND tgrnotification.TRIGGERNOTIFICATIONSTATUS = 'A') commsrequest 
INNER JOIN COMMSCODE commscode ON commscode.COMMSCODE = commsrequest.COMMSCODE 
INNER JOIN COMMSPREFERENCE commspref ON commspref.COMMSPREFERENCECODE = commscode.COMMSPREFERENCECODE 
LEFT JOIN SUBSCRIPTION subscription ON subscription.SUBSCRIPTIONNUMBER = CASE WHEN commsrequest.CUSTOMERLEVEL = 'S' THEN CAST(commsrequest.CUSTOMERREFERENCE AS INTEGER) ELSE 0 END 
LEFT JOIN NETWORK network ON network.NETWORKCODE = subscription.NETWORKCODE
LEFT JOIN ACCOUNT account ON account.ACCOUNTNUMBER = CASE WHEN commsrequest.CUSTOMERLEVEL = 'A' THEN CAST(commsrequest.CUSTOMERREFERENCE AS INTEGER) WHEN commsrequest.CUSTOMERLEVEL = 'S' THEN subscription.ACCOUNTNUMBER ELSE 0 END LEFT JOIN AGREEMENT agreement ON agreement.AGREEMENTNUMBER = CASE WHEN commsrequest.CUSTOMERLEVEL = 'M' THEN CAST(commsrequest.CUSTOMERREFERENCE AS INTEGER) ELSE 0 END LEFT JOIN CUSTOMERCOMMSPROFILE customprofile ON customprofile.CUSTOMERLEVEL = commsrequest.CUSTOMERLEVEL AND customprofile.CUSTOMERREFERENCE = commsrequest.CUSTOMERREFERENCE 
LEFT JOIN CUSTOMERCOMMSPREFERENCE custcommsprf ON custcommsprf.COMMSPREFERENCECODE = commscode.COMMSPREFERENCECODE AND custcommsprf.CUSTOMERLEVEL = commsrequest.CUSTOMERLEVEL AND custcommsprf.CUSTOMERREFERENCE = commsrequest.CUSTOMERREFERENCE 
LEFT JOIN CUSTOMERCOMMSPREFERENCE custcommsprfacag ON custcommsprfacag.COMMSPREFERENCECODE = commscode.COMMSPREFERENCECODE AND custcommsprfacag.CUSTOMERLEVEL = CASE WHEN commsrequest.CUSTOMERLEVEL = 'S' AND custcommsprf.COMMSPREFERENCECODE IS NULL THEN 'A' WHEN commsrequest.CUSTOMERLEVEL = 'M' THEN agreement.CUSTOMERLOGLEVEL ELSE '' END 
AND custcommsprfacag.CUSTOMERREFERENCE = CASE WHEN commsrequest.CUSTOMERLEVEL = 'S' AND custcommsprf.COMMSPREFERENCECODE IS NULL THEN CAST (subscription.ACCOUNTNUMBER AS VARCHAR(20)) WHEN commsrequest.CUSTOMERLEVEL = 'M' THEN agreement.CUSTOMERLOGREFERENCE ELSE '' END 
LEFT JOIN CUSTOMEREMAILADDRESS custemailaddress ON custemailaddress.CUSTOMERLEVEL = CASE WHEN commsrequest.CUSTOMERLEVEL = 'M' THEN agreement.CUSTOMERLOGLEVEL ELSE commsrequest.CUSTOMERLEVEL END AND custemailaddress.CUSTOMERREFERENCE = CASE WHEN commsrequest.CUSTOMERLEVEL = 'M' THEN agreement.CUSTOMERLOGREFERENCE ELSE commsrequest.CUSTOMERREFERENCE END AND custemailaddress.ISPRIMARYEMAIL = '1' 
ORDER BY commsrequest.PRIORITY, commsrequest.COMMSREQUESTID;